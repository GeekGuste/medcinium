/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import com.mysql.jdbc.SQLError;
import java.awt.Color;
import static java.lang.String.format;
import static java.lang.String.format;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.TableModel;
import models.Allergy;
import models.Consultation;
import models.Drug;
import models.Patient;
import models.PatientInfo;
import models.User;
import models.dao.DAO;
import models.dao.DAOFactory;
import static views.Utils.buildTableModel;

/**
 *
 * @author zianwar
 */
public class AccueilPanel extends javax.swing.JPanel implements ListSelectionListener {
    
    private Vector<Consultation> pendingConsultation;
    private Vector<Consultation> finishedConsultation;
    
    private boolean ajouterButtonClicked = false;
    private boolean chercherButtonClicked = false;
    
    Patient patientFoundBySearch = new Patient();
    models.Model model;
    
    // For prescriptionPanel
    Consultation consultation;
    Vector<PatientInfo> allInfos ;
    Vector<Drug> allDrugs ;
    Vector<Allergy> allAllergies;
    Vector<PatientInfo> selectedInfos ;
    Vector<Drug> selectedDrugs ;
    Vector<Allergy> selectedAllergies;
    // ---------
    
    /**
     * Creates new form AccueilPanel
     */
    public AccueilPanel() {
        
        initComponents();
        refreshModels();
        searchPatientPanel.setVisible(false);
        prescriptionPanel.setVisible(false);
        if(!User.getConnectedUser().getRole().equals("docteur"))
        {
            beginConsultationButton.setEnabled(false);
        }
         // create a ListSelectionListener to listen for rows clicked in the table
        ListSelectionModel selectionModel = patientsTable.getSelectionModel();
        selectionModel.addListSelectionListener(this);
    }
    
    public void refreshModels() {
        pendingConsultationsTable.setModel(TableModelBuilder.buildPendingConsultationTableModel(DAOFactory.getConsultationDAO().byStatus("pending")));
        finishedConsultationsTable.setModel(TableModelBuilder.buildLastConsultationTableModel(DAOFactory.getConsultationDAO().byStatus("finished")));
        this.remindersTable.setModel(TableModelBuilder.buildRemindersConsultationsTableModel(DAOFactory.getReminderDAO().allByDate(Utils.dateFormatter(jXMonthView1.getToday())), DAOFactory.getConsultationDAO().byDate(Utils.dateFormatter(jXMonthView1.getToday()))));
    }
    
    public void loadPrescriptionPanel(Consultation consultation) {
        this.consultation = consultation;
        selectedInfos = new Vector<PatientInfo>();
        selectedDrugs = new Vector<Drug>();
        selectedAllergies= new Vector<Allergy>();
        allInfos = DAOFactory.getPatientInfoDAO().all();
       
        for (PatientInfo Info : allInfos) {
            infoChoice.addItem(Info.getProperty());
        }
        
        allDrugs = DAOFactory.getDrugDAO().all();
        for (Drug Drug : allDrugs) {
            drugChoice.addItem(Drug.getDrugName());
        }
        
        allAllergies = DAOFactory.getAllergyDAO().all();
        for (Allergy Allergy : allAllergies) {
            allergyChoice.addItem(Allergy.getAllergyName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pendingConsultationsTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        finishedConsultationsTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        remindersTable = new javax.swing.JTable();
        rappelsButtons = new javax.swing.JButton();
        consultationsButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jXMonthView1 = new org.jdesktop.swingx.JXMonthView();
        beginConsultationButton = new javax.swing.JButton();
        reserverButton = new javax.swing.JButton();
        newReservationPanel = new javax.swing.JPanel();
        searchPatientPanel = new javax.swing.JPanel();
        MenuPanel = new javax.swing.JPanel();
        searchTextField1 = new javax.swing.JTextField();
        searchButton1 = new javax.swing.JButton();
        addPatientButton1 = new javax.swing.JButton();
        patientsListPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        patientsTable = new javax.swing.JTable();
        newPatientPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        FirstNameText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        monthChoice = new javax.swing.JComboBox();
        jScrollPane4 = new javax.swing.JScrollPane();
        addressText = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        CityText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cinText = new javax.swing.JTextField();
        sexChoice = new javax.swing.JComboBox();
        PhoneText = new javax.swing.JTextField();
        DayChoice = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        YearText = new javax.swing.JTextField();
        newConsultationPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        typeChoice = new javax.swing.JComboBox();
        visitDate = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        validerButton = new javax.swing.JButton();
        prescriptionPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        descriptionText = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        diagnostiqueText = new javax.swing.JTextArea();
        allergyChoice = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        drugChoice = new javax.swing.JComboBox();
        addDrug = new javax.swing.JButton();
        undoDrug = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        drugDesc = new javax.swing.JTextArea();
        valueText = new javax.swing.JTextField();
        dateInfo = new org.jdesktop.swingx.JXDatePicker();
        infoChoice = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        addAllergy = new javax.swing.JButton();
        undoAllergy = new javax.swing.JLabel();
        undoinfo = new javax.swing.JLabel();
        allergies = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        drugList = new javax.swing.JTextArea();
        jScrollPane10 = new javax.swing.JScrollPane();
        infos = new javax.swing.JTextArea();
        addInfoButton = new javax.swing.JButton();
        valider = new javax.swing.JButton();
        revenirButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(241, 241, 241));
        setPreferredSize(new java.awt.Dimension(889, 550));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mainPanel.setBackground(new java.awt.Color(241, 241, 241));
        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(241, 241, 241));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "File d'attente", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N

        pendingConsultationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Nom", "Prenom", "Type"
            }
        ));
        jScrollPane1.setViewportView(pendingConsultationsTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 330, -1));

        jPanel2.setBackground(new java.awt.Color(241, 241, 241));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dernières consultations", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N

        finishedConsultationsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Num", "Date", "Patient"
            }
        ));
        jScrollPane2.setViewportView(finishedConsultationsTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 334, -1));

        jPanel3.setBackground(new java.awt.Color(241, 241, 241));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Rappels", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N

        remindersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Titre", "Heure", "Patient"
            }
        ));
        jScrollPane3.setViewportView(remindersTable);

        rappelsButtons.setText("Rappels");
        rappelsButtons.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rappelsButtonsActionPerformed(evt);
            }
        });

        consultationsButton.setText("Consultations");
        consultationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultationsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(rappelsButtons)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(consultationsButton)
                        .addGap(0, 128, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rappelsButtons)
                    .addComponent(consultationsButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, -1, -1));

        jPanel5.setBackground(new java.awt.Color(241, 241, 241));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jXMonthView1.setBackground(new java.awt.Color(241, 241, 241));
        jXMonthView1.setDaysOfTheWeek(new String[] {"Dim", "Lun", "Mar", "Mer", "Jeu", "Ven", "Sam"});
        jXMonthView1.setFirstDayOfWeek(2);
        jXMonthView1.setFont(new java.awt.Font("Calibri", 0, 16)); // NOI18N
        jXMonthView1.setTraversable(true);
        jXMonthView1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jXMonthView1ActionPerformed(evt);
            }
        });
        jPanel5.add(jXMonthView1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 260, 240));

        mainPanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 280, -1));

        beginConsultationButton.setText("Commencer consultation");
        beginConsultationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beginConsultationButtonActionPerformed(evt);
            }
        });
        mainPanel.add(beginConsultationButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, -1, -1));

        reserverButton.setText("Reserver");
        reserverButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserverButtonActionPerformed(evt);
            }
        });
        mainPanel.add(reserverButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, -1));

        add(mainPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 520));

        newReservationPanel.setBackground(new java.awt.Color(241, 241, 241));
        newReservationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        searchPatientPanel.setBackground(new java.awt.Color(241, 241, 241));
        searchPatientPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MenuPanel.setBackground(new java.awt.Color(241, 241, 241));
        MenuPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        MenuPanel.add(searchTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 200, -1));

        searchButton1.setText("Rechercher");
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        MenuPanel.add(searchButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        addPatientButton1.setText("Ajouter Nouveau");
        addPatientButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientButton1ActionPerformed(evt);
            }
        });
        MenuPanel.add(addPatientButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, -1, -1));

        searchPatientPanel.add(MenuPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, 50));

        patientsListPanel.setBackground(new java.awt.Color(241, 241, 241));
        patientsListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Liste des patients", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 1, 13))); // NOI18N

        patientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "N˚ Patient", "Nom", "Prénom"
            }
        ));
        jScrollPane5.setViewportView(patientsTable);

        javax.swing.GroupLayout patientsListPanelLayout = new javax.swing.GroupLayout(patientsListPanel);
        patientsListPanel.setLayout(patientsListPanelLayout);
        patientsListPanelLayout.setHorizontalGroup(
            patientsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patientsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                .addContainerGap())
        );
        patientsListPanelLayout.setVerticalGroup(
            patientsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patientsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addContainerGap())
        );

        searchPatientPanel.add(patientsListPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 680, 210));

        newPatientPanel.setBackground(new java.awt.Color(241, 241, 241));
        newPatientPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Nom");
        newPatientPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 249, -1));
        newPatientPanel.add(lastNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 150, -1));
        newPatientPanel.add(FirstNameText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, 150, -1));

        jLabel8.setText("CIN");
        newPatientPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, 60, -1));

        jLabel3.setText("Date Naissance");
        newPatientPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 100, -1));

        monthChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        newPatientPanel.add(monthChoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 50, 54, -1));

        addressText.setColumns(20);
        addressText.setRows(3);
        jScrollPane4.setViewportView(addressText);

        newPatientPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, -1, 70));

        jLabel2.setText("Prenom");
        newPatientPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 252, -1));

        jLabel4.setText("Téléphone");
        newPatientPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 70, -1));

        jLabel5.setText("Adresse");
        newPatientPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 100, 483, -1));
        newPatientPanel.add(CityText, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, 120, -1));

        jLabel6.setText("Ville");
        newPatientPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 483, -1));
        newPatientPanel.add(cinText, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 20, 150, -1));

        sexChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        newPatientPanel.add(sexChoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));
        newPatientPanel.add(PhoneText, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 150, -1));

        DayChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        newPatientPanel.add(DayChoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, 133, -1));

        jLabel7.setText("Sexe");
        newPatientPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 60, -1));
        newPatientPanel.add(YearText, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 50, 45, -1));

        searchPatientPanel.add(newPatientPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 690, 220));

        newConsultationPanel.setBackground(new java.awt.Color(241, 241, 241));
        newConsultationPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel9.setText("Type");

        typeChoice.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Visite Normale", "Contôle" }));

        visitDate.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), new java.util.Date(), null, java.util.Calendar.DAY_OF_MONTH));

        jLabel10.setText("Date");

        validerButton.setText("Valider");
        validerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newConsultationPanelLayout = new javax.swing.GroupLayout(newConsultationPanel);
        newConsultationPanel.setLayout(newConsultationPanelLayout);
        newConsultationPanelLayout.setHorizontalGroup(
            newConsultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newConsultationPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(newConsultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGap(39, 39, 39)
                .addGroup(newConsultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newConsultationPanelLayout.createSequentialGroup()
                        .addComponent(typeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(newConsultationPanelLayout.createSequentialGroup()
                        .addComponent(visitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                        .addComponent(validerButton)
                        .addGap(15, 15, 15))))
        );
        newConsultationPanelLayout.setVerticalGroup(
            newConsultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newConsultationPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(newConsultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(17, 17, 17)
                .addGroup(newConsultationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(visitDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newConsultationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(validerButton)
                .addContainerGap())
        );

        searchPatientPanel.add(newConsultationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 670, 110));

        newReservationPanel.add(searchPatientPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 780, 430));

        add(newReservationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, -1, -1));

        prescriptionPanel.setBackground(new java.awt.Color(241, 241, 241));
        prescriptionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        descriptionText.setColumns(20);
        descriptionText.setRows(5);
        jScrollPane6.setViewportView(descriptionText);

        prescriptionPanel.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, 252, 90));

        jLabel11.setText("Diagnostics");
        prescriptionPanel.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel12.setText("Description");
        prescriptionPanel.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 25, -1, -1));

        jLabel13.setText("Alllergie");
        prescriptionPanel.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        diagnostiqueText.setColumns(20);
        diagnostiqueText.setRows(5);
        jScrollPane7.setViewportView(diagnostiqueText);

        prescriptionPanel.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 252, 90));

        prescriptionPanel.add(allergyChoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, 160, -1));

        jPanel4.setBackground(new java.awt.Color(241, 241, 241));

        addDrug.setText("+");
        addDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDrugActionPerformed(evt);
            }
        });

        undoDrug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Undo.png"))); // NOI18N
        undoDrug.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                undoDrugMouseClicked(evt);
            }
        });

        drugDesc.setColumns(20);
        drugDesc.setRows(5);
        jScrollPane8.setViewportView(drugDesc);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(drugChoice, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addDrug)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(undoDrug)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(undoDrug)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(drugChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(addDrug)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        prescriptionPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, 130));

        valueText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueTextActionPerformed(evt);
            }
        });
        prescriptionPanel.add(valueText, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 310, 80, -1));
        prescriptionPanel.add(dateInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 310, -1, -1));

        infoChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoChoiceActionPerformed(evt);
            }
        });
        prescriptionPanel.add(infoChoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 310, -1, -1));

        jLabel14.setText("Infos");
        prescriptionPanel.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 290, -1, -1));

        jLabel15.setText("médicament");
        prescriptionPanel.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 14, -1, -1));

        addAllergy.setText("+");
        addAllergy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAllergyActionPerformed(evt);
            }
        });
        prescriptionPanel.add(addAllergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 40, -1));

        undoAllergy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Undo.png"))); // NOI18N
        undoAllergy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                undoAllergyMouseClicked(evt);
            }
        });
        prescriptionPanel.add(undoAllergy, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 320, -1, 23));

        undoinfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Undo.png"))); // NOI18N
        undoinfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                undoinfoMouseClicked(evt);
            }
        });
        prescriptionPanel.add(undoinfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 320, -1, -1));
        prescriptionPanel.add(allergies, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 590, 284, -1));

        drugList.setEditable(false);
        drugList.setColumns(20);
        drugList.setRows(5);
        jScrollPane9.setViewportView(drugList);

        prescriptionPanel.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 360, -1));

        infos.setColumns(20);
        infos.setRows(5);
        jScrollPane10.setViewportView(infos);

        prescriptionPanel.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 340, 360, -1));

        addInfoButton.setText("+");
        addInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addInfoButtonActionPerformed(evt);
            }
        });
        prescriptionPanel.add(addInfoButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 310, 40, -1));

        valider.setText("Valider");
        valider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validerActionPerformed(evt);
            }
        });
        prescriptionPanel.add(valider, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 450, 100, -1));

        revenirButton.setText("Revenir");
        revenirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                revenirButtonActionPerformed(evt);
            }
        });
        prescriptionPanel.add(revenirButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 10, -1, -1));

        add(prescriptionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jXMonthView1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jXMonthView1ActionPerformed
        
        
        String selectedDate = Utils.dateFormatter(jXMonthView1.getSelectionDate());
        this.remindersTable.setModel(TableModelBuilder.buildRemindersConsultationsTableModel(DAOFactory.getReminderDAO().allByDate(selectedDate), DAOFactory.getConsultationDAO().byDate(selectedDate)));
    
    }//GEN-LAST:event_jXMonthView1ActionPerformed

    private void consultationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultationsButtonActionPerformed
        
        java.util.Date selectedDate;
        
        if (jXMonthView1.getSelectionDate() == null) {
            selectedDate = jXMonthView1.getToday();
        } else {
            selectedDate = jXMonthView1.getSelectionDate();
        }
        
        this.remindersTable.setModel(TableModelBuilder.buildConsultationsTableModel(DAOFactory.getConsultationDAO().byDate(Utils.dateFormatter(selectedDate))));
    }//GEN-LAST:event_consultationsButtonActionPerformed

    private void rappelsButtonsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rappelsButtonsActionPerformed
        java.util.Date selectedDate;
        
        if (jXMonthView1.getSelectionDate() == null) {
            selectedDate = jXMonthView1.getToday();
        } else {
            selectedDate = jXMonthView1.getSelectionDate();
        }
        
        this.remindersTable.setModel(TableModelBuilder.buildRemindersTableModel(DAOFactory.getReminderDAO().allByDate(Utils.dateFormatter(selectedDate))));
    }//GEN-LAST:event_rappelsButtonsActionPerformed

    private void beginConsultationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beginConsultationButtonActionPerformed
        String num = null;
        try {
            TableModel model = (TableModel)pendingConsultationsTable.getModel();
            num = String.valueOf(model.getValueAt(pendingConsultationsTable.getSelectedRow(), 0));
        } catch(Exception e) {
            JOptionPane.showMessageDialog(this, "Veuillez selectionner un patient", "Erreur", JOptionPane.ERROR_MESSAGE);        
        }
        
        if(num != null) {
            try {
                Consultation currentConsultation = DAOFactory.getConsultationDAO().find(num);
                loadPrescriptionPanel(currentConsultation);
                //new prescriptionFrame(currentConsultation).setVisible(true);
            
            } catch (Exception e) {
                System.out.println("Erreur lors de la modification");
            }
            
            refreshModels();
            mainPanel.setVisible(false);
            newReservationPanel.setVisible(false);
            prescriptionPanel.setVisible(true);
        }
        
    }//GEN-LAST:event_beginConsultationButtonActionPerformed

    private void addPatientButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientButton1ActionPerformed
        patientsListPanel.setVisible(false);
        newPatientPanel.setVisible(true);
        newConsultationPanel.setVisible(true);
        ajouterButtonClicked = true;
        chercherButtonClicked = false;
    }//GEN-LAST:event_addPatientButton1ActionPerformed

    private void reserverButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserverButtonActionPerformed
        mainPanel.setVisible(false);
        
        searchPatientPanel.repaint();
        searchPatientPanel.revalidate();
        searchPatientPanel.setVisible(true);
        
        patientsListPanel.setVisible(false);
        newPatientPanel.setVisible(false);
        newConsultationPanel.setVisible(false);
    }//GEN-LAST:event_reserverButtonActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
        
        patientsTable.repaint();
        refreshTable(DAOFactory.getPatientDAO().like(searchTextField1.getText()));
        patientsListPanel.setVisible(true);
        newPatientPanel.setVisible(false);
        newConsultationPanel.setVisible(true);
        chercherButtonClicked = true;
        ajouterButtonClicked = false;
    }//GEN-LAST:event_searchButton1ActionPerformed

    private void validerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerButtonActionPerformed
        
        Consultation consultation = new Consultation();
        
        if (ajouterButtonClicked) {
            Patient patientAdded = new Patient();
            
            patientAdded.setName(FirstNameText.getText());
            patientAdded.setLastName(lastNameText.getText());
            patientAdded.setAddress(addressText.getText());
            patientAdded.setCin(cinText.getText());
            patientAdded.setCity(CityText.getText());
            patientAdded.setSexe(sexChoice.getSelectedItem().toString());
            patientAdded.setTelephone(PhoneText.getText());
            patientAdded.setBirthDate(new Date(Integer.parseInt(YearText.getText()),Integer.parseInt(monthChoice.getSelectedItem().toString()), Integer.parseInt(DayChoice.getSelectedItem().toString())));
            
            if (DAOFactory.getPatientDAO().create(patientAdded)) {
                System.out.println("Patient cree dans base donnee" + patientAdded);
                consultation.setPatient(patientAdded);
                consultation.setType(typeChoice.getSelectedItem().toString());
                consultation.setStatus("pending");
                consultation.setDiagnostics("");
                java.util.Date date = (java.util.Date)(visitDate.getValue());
                consultation.setConsultationDate(new Timestamp(date.getTime()));

                if((date).compareTo(new java.util.Date()) < 0) {
                     JOptionPane.showMessageDialog(this, "Veuillez choisir une date futur", "Erreur", JOptionPane.ERROR_MESSAGE);
                } else {
                    if( DAOFactory.getConsultationDAO().create(consultation)) {
                        JOptionPane.showMessageDialog(this, "Réservation ajoutée", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Réservation n'a pas été ajoutée", "Erreur", JOptionPane.ERROR_MESSAGE);
                    }
                } 
            }
        }
        
        if (chercherButtonClicked) {
            
            if (patientFoundBySearch != null) {
                
                consultation.setPatient(patientFoundBySearch);
                consultation.setType(typeChoice.getSelectedItem().toString());
                consultation.setStatus("pending");
                consultation.setDiagnostics("");
                java.util.Date date = (java.util.Date)(visitDate.getValue());
                consultation.setConsultationDate(new Timestamp(date.getTime()));

                if((date).compareTo(new java.util.Date()) < 0) {
                    JOptionPane.showMessageDialog(this, "Veuillez choisir une date futur", "Erreur", JOptionPane.ERROR_MESSAGE);
                } else {
                    if( DAOFactory.getConsultationDAO().create(consultation)) {
                        JOptionPane.showMessageDialog(this, "Réservation ajoutée", "Info", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Réservation n'a pas été ajoutée", "Erreur", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selectionner d'abord un patient", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        }
        
   
    }//GEN-LAST:event_validerButtonActionPerformed

    private void addDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDrugActionPerformed
        String chaine="";
        selectedDrugs.add(allDrugs.get(drugChoice.getSelectedIndex()));
        selectedDrugs.get(selectedDrugs.size()-1).setDrugDescription(drugDesc.getText());
        for (Drug d : selectedDrugs) {
            chaine += d.getDrugName()+" : "+d.getDrugDescription()+"\n";
        }
        drugList.setText(chaine);
        drugDesc.setText("");
    }//GEN-LAST:event_addDrugActionPerformed

    private void undoDrugMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_undoDrugMouseClicked
        try {
            selectedDrugs.remove(selectedDrugs.size()-1);
            String chaine="";
            for (Drug d : selectedDrugs) {
                chaine += d.getDrugName()+" : "+d.getDrugDescription()+"\n";
            }
            drugList.setText(chaine);
            drugDesc.setText("");
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_undoDrugMouseClicked

    private void infoChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoChoiceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_infoChoiceActionPerformed

    private void addAllergyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAllergyActionPerformed
        String chaine="";
        selectedAllergies.add(allAllergies.get(allergyChoice.getSelectedIndex()));
        for (Allergy S : selectedAllergies) {
            chaine += S.getAllergyName()+"; ";
        }
        allergies.setText(chaine);
    }//GEN-LAST:event_addAllergyActionPerformed

    private void undoAllergyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_undoAllergyMouseClicked
        try {
            selectedAllergies.remove(selectedAllergies.size()-1);
            System.out.println(selectedAllergies);
            String chaine="";
            for (Allergy S : selectedAllergies) {
                chaine += S.getAllergyName()+"; ";
            }
            allergies.setText(chaine);
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }

    }//GEN-LAST:event_undoAllergyMouseClicked

    private void undoinfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_undoinfoMouseClicked

        try {
            selectedInfos.remove(selectedInfos.size()-1);
            String chaine="";
            for (PatientInfo info : selectedInfos) {
                chaine += info.getProperty()+"   "+info.getValue()+"   "+info.getDateAdded()+"\n";
            }
            infos.setText(chaine);
            valueText.setText("");
        }catch(ArrayIndexOutOfBoundsException e){
            System.out.println(e);
        }

    }//GEN-LAST:event_undoinfoMouseClicked

    private void addInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addInfoButtonActionPerformed

        String chaine="";
        selectedInfos.add(allInfos.get(infoChoice.getSelectedIndex()));
        selectedInfos.get(selectedInfos.size()-1).setValue(valueText.getText());
        selectedInfos.get(selectedInfos.size()-1).setDateAdded(new Date(dateInfo.getDate().getTime()));
        for (PatientInfo info : selectedInfos) {
            chaine += info.getProperty()+"   "+info.getValue()+"   "+info.getDateAdded()+"\n";
        }
        infos.setText(chaine);
        valueText.setText("");
    }//GEN-LAST:event_addInfoButtonActionPerformed

    private void validerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validerActionPerformed
        consultation.setDescription(descriptionText.getText());
        consultation.setDiagnostics(diagnostiqueText.getText());
        consultation.setStatus("finished");

        if(DAOFactory.getConsultationDAO().update(consultation)) {
            
            for (PatientInfo selAllInfo : selectedInfos) {
                DAOFactory.getConsultationDAO().contient(consultation, selAllInfo);
            }

            for (Drug drug : selectedDrugs) {
                DAOFactory.getConsultationDAO().introduit(consultation, drug);
            }
            
            for (Allergy allergy : selectedAllergies) {
                DAOFactory.getConsultationDAO().renseigne(consultation, allergy);
            }
            
        } else {
            JOptionPane.showMessageDialog(this, "Erreur de création", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        
        prescriptionPanel.setVisible(false);
        mainPanel.setVisible(true);
        refreshModels();
    }//GEN-LAST:event_validerActionPerformed

    private void valueTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valueTextActionPerformed

    private void revenirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_revenirButtonActionPerformed
       prescriptionPanel.setVisible(false);
    }//GEN-LAST:event_revenirButtonActionPerformed

    
    public void refreshTable(Vector<Patient> patients) {
        try {
            patientsTable.setModel(TableModelBuilder.buildPatientTableModel(patients));
        } catch (Exception ex) {
            patientsTable.repaint();
        }
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CityText;
    private javax.swing.JComboBox DayChoice;
    private javax.swing.JTextField FirstNameText;
    private javax.swing.JPanel MenuPanel;
    private javax.swing.JTextField PhoneText;
    private javax.swing.JTextField YearText;
    private javax.swing.JButton addAllergy;
    private javax.swing.JButton addDrug;
    private javax.swing.JButton addInfoButton;
    private javax.swing.JButton addPatientButton1;
    private javax.swing.JTextArea addressText;
    private javax.swing.JLabel allergies;
    private javax.swing.JComboBox allergyChoice;
    private javax.swing.JButton beginConsultationButton;
    private javax.swing.JTextField cinText;
    private javax.swing.JButton consultationsButton;
    private org.jdesktop.swingx.JXDatePicker dateInfo;
    private javax.swing.JTextArea descriptionText;
    private javax.swing.JTextArea diagnostiqueText;
    private javax.swing.JComboBox drugChoice;
    private javax.swing.JTextArea drugDesc;
    private javax.swing.JTextArea drugList;
    private javax.swing.JTable finishedConsultationsTable;
    private javax.swing.JComboBox infoChoice;
    private javax.swing.JTextArea infos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private org.jdesktop.swingx.JXMonthView jXMonthView1;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox monthChoice;
    private javax.swing.JPanel newConsultationPanel;
    private javax.swing.JPanel newPatientPanel;
    private javax.swing.JPanel newReservationPanel;
    private javax.swing.JPanel patientsListPanel;
    private javax.swing.JTable patientsTable;
    private javax.swing.JTable pendingConsultationsTable;
    private javax.swing.JPanel prescriptionPanel;
    private javax.swing.JButton rappelsButtons;
    private javax.swing.JTable remindersTable;
    private javax.swing.JButton reserverButton;
    private javax.swing.JButton revenirButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JPanel searchPatientPanel;
    private javax.swing.JTextField searchTextField1;
    private javax.swing.JComboBox sexChoice;
    private javax.swing.JComboBox typeChoice;
    private javax.swing.JLabel undoAllergy;
    private javax.swing.JLabel undoDrug;
    private javax.swing.JLabel undoinfo;
    private javax.swing.JButton valider;
    private javax.swing.JButton validerButton;
    private javax.swing.JTextField valueText;
    private javax.swing.JSpinner visitDate;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (e.getSource() == patientsTable.getSelectionModel() && e.getValueIsAdjusting()) {
           TableModel model = (TableModel)patientsTable.getModel();
           String id = model.getValueAt(patientsTable.getSelectedRow(), 0).toString();
           patientFoundBySearch = DAOFactory.getPatientDAO().find(id);
           System.out.println(patientFoundBySearch);
           
        }
    }
}
